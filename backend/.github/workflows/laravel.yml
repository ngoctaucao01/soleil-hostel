name: Laravel CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug
          
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          cd backend
          composer install --prefer-dist --no-progress

      - name: Copy .env
        run: |
          cd backend
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: |
          cd backend
          php artisan key:generate

      - name: Directory Permissions
        run: |
          cd backend
          chmod -R 777 storage bootstrap/cache

      - name: Install PHP CS Fixer
        run: |
          cd backend
          composer require --dev friendsofphp/php-cs-fixer

      - name: Run PHP CS Fixer
        run: |
          cd backend
          vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Install PHPStan
        run: |
          cd backend
          composer require --dev phpstan/phpstan

      - name: Run PHPStan
        run: |
          cd backend
          vendor/bin/phpstan analyse app tests

  test:
    name: Tests
    needs: code-quality
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          cd backend
          composer install --prefer-dist --no-progress

      - name: Copy .env
        run: |
          cd backend
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: |
          cd backend
          php artisan key:generate

      - name: Directory Permissions
        run: |
          cd backend
          chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          cd backend
          php artisan migrate:fresh --env=testing

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: root
        run: |
          cd backend
          php artisan test --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: true

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite

      - name: Install dependencies
        run: |
          cd backend
          composer install --no-dev --optimize-autoloader

      - name: Generate key
        run: |
          cd backend
          php artisan key:generate

      - name: Directory Permissions
        run: |
          cd backend
          chmod -R 777 storage bootstrap/cache

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/html
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart php8.1-fpm 